{"ast":null,"code":"/**\n*   Axios Request Proxy to Apply Callback Functions & Handle Errors\n*   @param {Promise} axiosReq - axios Request Returned Promise\n*   @param {function} thenFx - n Functions to Apply as then\n*/\nexport function axiosRequest(axiosReq, ...thenFx) {\n  // Server Request - Pass Good Data and Throw All Errors\n  const request = axiosReq.then(data => {\n    // debugger\n    // Return Object Data\n    if (data.data && data.data.status === \"Success\") return data.data; // Throw Non Server Response Object Error\n\n    throw data.data;\n  }); // Apply Callback Functions\n\n  thenFx.reduce((a, n) => a.then(n), request) // Handle Errors\n  .catch(err => {\n    // debugger\n    if (err.response && err.response.data && err.response.data.error) {\n      // Show Server Response Error \n      alert(\"Server Message\\n\" + Object.entries(err.response.data).join(\"\\n\"));\n    } else if (err.response) {\n      // Show Axios Reponse Error\n      alert(\"Axios Error See Console\");\n      console.log(err.response);\n    } else {\n      // Other Error\n      console.log(\"Request Error\", err);\n      alert(\"Request Error.\\n\" + JSON.stringify(err, null, 2) + \"\\nSee Console for Details\");\n    }\n  }) // Catch All Misc Errors\n  .catch(err => alert(\"Unknown Error - Programming Logic Error: \" + err));\n}\n/** Checks for Invalid/Missing Data\n* @param {any} value - Value to Check\n* @returns {boolean} Is Data Valid true/false\n*/\n\nexport function isInvalid(value) {\n  return value === undefined || value === \"\" || value === null;\n}\n;\n/** Checks Object for Invalid/Missing Properties\n* @param {string []} aryRequired - Array of Required Properties\n* @param {object} objValues - Object to Check\n* @param {object []} aryRename - Rename Array for User { key: Rename }\n* @returns {string[]} [0] Array of Missing Data and [1] String of Missing Data\n*/\n\nexport function isMissing(aryRequired, objValues, aryRename) {\n  // Filter Out Valid Data\n  let missing = aryRequired.filter(n => isInvalid(objValues[n])); // Format Missing Data Return String\n\n  if (missing.length) {\n    // Rename & Return\n    missing = missing.map(n => aryRename[n] || n);\n    return [missing, \"Missing Data for: \" + missing.join(\", \")];\n  } // Return Empty String for All Data Present\n\n\n  return \"\";\n}\n;","map":{"version":3,"sources":["/Users/shiziwizi/Documents/final-project-tekle-chronister/client/src/zFx.js"],"names":["axiosRequest","axiosReq","thenFx","request","then","data","status","reduce","a","n","catch","err","response","error","alert","Object","entries","join","console","log","JSON","stringify","isInvalid","value","undefined","isMissing","aryRequired","objValues","aryRename","missing","filter","length","map"],"mappings":"AAGA;AACA;AACA;AACA;AACA;AACA,OAAO,SAASA,YAAT,CAAuBC,QAAvB,EAAiC,GAAGC,MAApC,EAA4C;AAEjD;AACA,QAAMC,OAAO,GAAGF,QAAQ,CAACG,IAAT,CAAcC,IAAI,IAAI;AAExC;AACI;AACA,QAAIA,IAAI,CAACA,IAAL,IAAaA,IAAI,CAACA,IAAL,CAAUC,MAAV,KAAqB,SAAtC,EAAiD,OAAOD,IAAI,CAACA,IAAZ,CAJb,CAMpC;;AACA,UAAOA,IAAI,CAACA,IAAZ;AACD,GARe,CAAhB,CAHiD,CAajD;;AACAH,EAAAA,MAAM,CAACK,MAAP,CAAc,CAACC,CAAD,EAAIC,CAAJ,KAAUD,CAAC,CAACJ,IAAF,CAAOK,CAAP,CAAxB,EAAmCN,OAAnC,EAEA;AAFA,GAGCO,KAHD,CAGOC,GAAG,IAAI;AAEhB;AAEI,QAAIA,GAAG,CAACC,QAAJ,IAAgBD,GAAG,CAACC,QAAJ,CAAaP,IAA7B,IAAqCM,GAAG,CAACC,QAAJ,CAAaP,IAAb,CAAkBQ,KAA3D,EAAkE;AAEhE;AACAC,MAAAA,KAAK,CAAC,qBAAqBC,MAAM,CAACC,OAAP,CAAeL,GAAG,CAACC,QAAJ,CAAaP,IAA5B,EAAkCY,IAAlC,CAAuC,IAAvC,CAAtB,CAAL;AAED,KALD,MAKO,IAAIN,GAAG,CAACC,QAAR,EAAoB;AAEzB;AACAE,MAAAA,KAAK,CAAC,yBAAD,CAAL;AACAI,MAAAA,OAAO,CAACC,GAAR,CAAYR,GAAG,CAACC,QAAhB;AAED,KANM,MAMA;AAEL;AACAM,MAAAA,OAAO,CAACC,GAAR,CAAY,eAAZ,EAA6BR,GAA7B;AACAG,MAAAA,KAAK,CAAC,qBAAqBM,IAAI,CAACC,SAAL,CAAeV,GAAf,EAAoB,IAApB,EAA0B,CAA1B,CAArB,GAAoD,2BAArD,CAAL;AAED;AAEF,GA1BD,EA4BA;AA5BA,GA6BCD,KA7BD,CA6BQC,GAAD,IAAOG,KAAK,CAAC,8CAA8CH,GAA/C,CA7BnB;AA+BD;AAID;AACA;AACA;AACA;;AACA,OAAO,SAASW,SAAT,CAAoBC,KAApB,EAA2B;AAChC,SAAOA,KAAK,KAAKC,SAAV,IAAuBD,KAAK,KAAK,EAAjC,IAAuCA,KAAK,KAAK,IAAxD;AACD;AAAA;AAGD;AACA;AACA;AACA;AACA;AACA;;AACA,OAAO,SAASE,SAAT,CAAmBC,WAAnB,EAAgCC,SAAhC,EAA2CC,SAA3C,EAAsD;AAE3D;AACA,MAAIC,OAAO,GAAGH,WAAW,CAACI,MAAZ,CAAmBrB,CAAC,IAAIa,SAAS,CAACK,SAAS,CAAClB,CAAD,CAAV,CAAjC,CAAd,CAH2D,CAK3D;;AACA,MAAIoB,OAAO,CAACE,MAAZ,EAAoB;AAElB;AACAF,IAAAA,OAAO,GAAGA,OAAO,CAACG,GAAR,CAAYvB,CAAC,IAAImB,SAAS,CAACnB,CAAD,CAAT,IAAgBA,CAAjC,CAAV;AACA,WAAO,CAACoB,OAAD,EAAU,uBAAuBA,OAAO,CAACZ,IAAR,CAAa,IAAb,CAAjC,CAAP;AAED,GAZ0D,CAc3D;;;AACA,SAAO,EAAP;AACD;AAAA","sourcesContent":["\n\n\n/**\n*   Axios Request Proxy to Apply Callback Functions & Handle Errors\n*   @param {Promise} axiosReq - axios Request Returned Promise\n*   @param {function} thenFx - n Functions to Apply as then\n*/\nexport function axiosRequest (axiosReq, ...thenFx) {\n\n  // Server Request - Pass Good Data and Throw All Errors\n  const request = axiosReq.then(data => {\n\n// debugger\n    // Return Object Data\n    if (data.data && data.data.status === \"Success\") return data.data\n\n    // Throw Non Server Response Object Error\n    throw (data.data)\n  })\n\n  // Apply Callback Functions\n  thenFx.reduce((a, n) => a.then(n), request)\n\n  // Handle Errors\n  .catch(err => {\n\n// debugger\n\n    if (err.response && err.response.data && err.response.data.error) {\n\n      // Show Server Response Error \n      alert(\"Server Message\\n\" + Object.entries(err.response.data).join(\"\\n\"))\n    \n    } else if (err.response  ) {\n\n      // Show Axios Reponse Error\n      alert(\"Axios Error See Console\")\n      console.log(err.response)\n\n    } else {\n\n      // Other Error\n      console.log(\"Request Error\", err)\n      alert(\"Request Error.\\n\" + JSON.stringify(err, null, 2) + \"\\nSee Console for Details\")\n\n    } \n\n  })\n\n  // Catch All Misc Errors\n  .catch((err)=>alert(\"Unknown Error - Programming Logic Error: \" + err))\n\n}\n\n\n\n/** Checks for Invalid/Missing Data\n* @param {any} value - Value to Check\n* @returns {boolean} Is Data Valid true/false\n*/\nexport function isInvalid (value) {\n  return value === undefined || value === \"\" || value === null;\n};\n\n\n/** Checks Object for Invalid/Missing Properties\n* @param {string []} aryRequired - Array of Required Properties\n* @param {object} objValues - Object to Check\n* @param {object []} aryRename - Rename Array for User { key: Rename }\n* @returns {string[]} [0] Array of Missing Data and [1] String of Missing Data\n*/\nexport function isMissing(aryRequired, objValues, aryRename) {\n\n  // Filter Out Valid Data\n  let missing = aryRequired.filter(n => isInvalid(objValues[n]));\n\n  // Format Missing Data Return String\n  if (missing.length) {\n\n    // Rename & Return\n    missing = missing.map(n => aryRename[n] || n)\n    return [missing, \"Missing Data for: \" + missing.join(\", \")];\n\n  }\n\n  // Return Empty String for All Data Present\n  return \"\";\n};"]},"metadata":{},"sourceType":"module"}