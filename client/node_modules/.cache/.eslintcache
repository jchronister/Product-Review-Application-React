[{"C:\\Users\\jerem\\Documents\\MIU\\CS568_WebApplicationDevelopment1\\Final_Project\\Final_Project\\client\\src\\index.js":"1","C:\\Users\\jerem\\Documents\\MIU\\CS568_WebApplicationDevelopment1\\Final_Project\\Final_Project\\client\\src\\App.js":"2","C:\\Users\\jerem\\Documents\\MIU\\CS568_WebApplicationDevelopment1\\Final_Project\\Final_Project\\client\\src\\reportWebVitals.js":"3","C:\\Users\\jerem\\Documents\\MIU\\CS568_WebApplicationDevelopment1\\Final_Project\\Final_Project\\client\\src\\9_Reducer_Auth.js":"4","C:\\Users\\jerem\\Documents\\MIU\\CS568_WebApplicationDevelopment1\\Final_Project\\Final_Project\\client\\src\\9_Reducer_products.js":"5","C:\\Users\\jerem\\Documents\\MIU\\CS568_WebApplicationDevelopment1\\Final_Project\\Final_Project\\client\\src\\3_Products.js":"6","C:\\Users\\jerem\\Documents\\MIU\\CS568_WebApplicationDevelopment1\\Final_Project\\Final_Project\\client\\src\\5_SuperUser.js":"7","C:\\Users\\jerem\\Documents\\MIU\\CS568_WebApplicationDevelopment1\\Final_Project\\Final_Project\\client\\src\\1_Router.js":"8","C:\\Users\\jerem\\Documents\\MIU\\CS568_WebApplicationDevelopment1\\Final_Project\\Final_Project\\client\\src\\9.1_Actions.js":"9","C:\\Users\\jerem\\Documents\\MIU\\CS568_WebApplicationDevelopment1\\Final_Project\\Final_Project\\client\\src\\4_Reviews.js":"10","C:\\Users\\jerem\\Documents\\MIU\\CS568_WebApplicationDevelopment1\\Final_Project\\Final_Project\\client\\src\\zComponents.js":"11","C:\\Users\\jerem\\Documents\\MIU\\CS568_WebApplicationDevelopment1\\Final_Project\\Final_Project\\client\\src\\2_Login.js":"12","C:\\Users\\jerem\\Documents\\MIU\\CS568_WebApplicationDevelopment1\\Final_Project\\Final_Project\\client\\src\\zFx.js":"13"},{"size":1163,"mtime":1618238773537,"results":"14","hashOfConfig":"15"},{"size":307,"mtime":1618099365001,"results":"16","hashOfConfig":"15"},{"size":362,"mtime":499162500000,"results":"17","hashOfConfig":"15"},{"size":777,"mtime":1618247142848,"results":"18","hashOfConfig":"15"},{"size":2427,"mtime":1618178623352,"results":"19","hashOfConfig":"15"},{"size":8962,"mtime":1618247881224,"results":"20","hashOfConfig":"15"},{"size":1806,"mtime":1618191984557,"results":"21","hashOfConfig":"15"},{"size":3261,"mtime":1618191473319,"results":"22","hashOfConfig":"15"},{"size":819,"mtime":1618238206660,"results":"23","hashOfConfig":"15"},{"size":3322,"mtime":1618189979742,"results":"24","hashOfConfig":"15"},{"size":3154,"mtime":1618189993764,"results":"25","hashOfConfig":"15"},{"size":4214,"mtime":1618247489554,"results":"26","hashOfConfig":"15"},{"size":2346,"mtime":1618247037932,"results":"27","hashOfConfig":"15"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},"14mdoxy",{"filePath":"31","messages":"32","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"33","usedDeprecatedRules":"30"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"42"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\jerem\\Documents\\MIU\\CS568_WebApplicationDevelopment1\\Final_Project\\Final_Project\\client\\src\\index.js",[],["58","59"],"C:\\Users\\jerem\\Documents\\MIU\\CS568_WebApplicationDevelopment1\\Final_Project\\Final_Project\\client\\src\\App.js",["60","61","62","63","64"],"import logo from './logo.svg';\nimport './App.css';\n\nimport {Products, ProductDetails} from \"./3_Products\"\nimport {UpsertReview} from \"./4_Reviews\"\nimport {UserAccounts} from \"./5_SuperUser\"\n\nimport {MainRouter} from \"./1_Router\"\n\n\n\nfunction App() {\n  return (\n    <MainRouter/>\n  );\n}\n\nexport default App;\n ","C:\\Users\\jerem\\Documents\\MIU\\CS568_WebApplicationDevelopment1\\Final_Project\\Final_Project\\client\\src\\reportWebVitals.js",[],"C:\\Users\\jerem\\Documents\\MIU\\CS568_WebApplicationDevelopment1\\Final_Project\\Final_Project\\client\\src\\9_Reducer_Auth.js",[],"C:\\Users\\jerem\\Documents\\MIU\\CS568_WebApplicationDevelopment1\\Final_Project\\Final_Project\\client\\src\\9_Reducer_products.js",[],"C:\\Users\\jerem\\Documents\\MIU\\CS568_WebApplicationDevelopment1\\Final_Project\\Final_Project\\client\\src\\3_Products.js",["65"],"import {Component} from \"react\"\r\nimport {connect} from \"react-redux\"\r\nimport {XButton, FormTextbox} from \"./zComponents\"\r\n\r\nimport {productTextboxChangeFx, productClearTextboxFx} from \"./9.1_Actions\"\r\n\r\n// Display Products List Component\r\nexport const Products = connect (\r\n\r\n  // MapStateToProps\r\n  state => ({\r\n    products: state.products.products,\r\n    user: state.auth.currentUser.username,\r\n    fieldList: state.products.setup.productFields\r\n  }),\r\n\r\n  // MapDischargeToProps\r\n  null\r\n\r\n)(\r\n\r\n  // Product List Component\r\n  class extends Component { \r\n\r\n    // Add Review Button\r\n    addReview = ({target}) => {\r\n      this.props.history.push(\"/products/\" + this.getId(target) + \"/create-review\")\r\n    }\r\n\r\n    // Edit Product Button\r\n    editProduct = ({target}) => {\r\n      this.props.history.push(\"/products/\" + this.getId(target))\r\n    }\r\n\r\n    // Returns Product Id Stored in element.data.id or null\r\n    getId (element) {\r\n      let el = element\r\n      while (el && !el.dataset.id) el = el.parentElement\r\n      return el && el.dataset.id\r\n    }\r\n\r\n    render () {\r\n\r\n      const header = true // Show Product Table Header\r\n      const {products, user, fieldList} = this.props // Product Field List to Show {Field Key: Field Name}\r\n      const fields = Object.keys(fieldList)\r\n      const creator = \"creator\" // Product Creator Key\r\n      const id = \"_id\" // Product Id Key\r\n\r\n      return (\r\n\r\n        <div>\r\n        <h2>Products List</h2>\r\n\r\n        <table className=\"table table-hover table-sortable\" onClick={(e)=>{\r\n          if (e.target.dataset.id)\r\n          // alert(e.target.dataset.id)\r\n          // debugger\r\n          // View Product Detail Page\r\n            this.props.history.push(\"/detail-product/\" + e.target.dataset.id)\r\n          }}>\r\n\r\n          {/* Add Header */}\r\n          <thead>\r\n          {header && <tr>{fields.map((n, i) => <th key={i}>{fieldList[n]}</th>)}<td></td><td></td></tr>}\r\n          </thead>\r\n\r\n          {/* Add Rows */}\r\n          <tbody>\r\n          {products.map(product => (\r\n          <tr key={product[id]} data-id={product[id]}>\r\n\r\n            {/* Add Columns/Cells */}\r\n            {fields.map((n, i)=><td key={product[id] + i} data-id={product[id]}>{product[n]}</td>)}\r\n\r\n            {/* Add Review Button */}\r\n            <td><XButton\r\n              title =\"Add Review\"\r\n              onClick = {this.addReview}\r\n              />\r\n            </td>\r\n\r\n            {/* Add Edit Button if User Created*/}\r\n            <td>\r\n              {user === product[creator] && \r\n                <XButton\r\n                  title =\"Edit Product\"\r\n                  className = \"btn btn-secondary\"\r\n                  onClick = {this.editProduct}\r\n                />\r\n              }\r\n            </td>           \r\n            \r\n          </tr>\r\n        ))}\r\n\r\n        </tbody></table>\r\n        </div>\r\n      )\r\n    }\r\n\r\n  }\r\n)\r\n\r\n\r\n\r\n// Display Product Details with Reviews\r\nexport const ProductDetails = connect(\r\n\r\n  // MapStateToProps\r\n  state => ({\r\n    user: state.auth.currentUser.username,\r\n  }), \r\n\r\n  // MapDispatchToProps\r\n  null\r\n\r\n)(\r\n\r\n  // Product Details Component\r\n  class ProductDetails extends Component{\r\n\r\n    state = {\r\n      rating:null ,\r\n      description:\"A Outdoor Wonder Water Bottle\",\r\n      details: {size:\"1 Liter\", width: \"3 inches\", height: \"12 inches\"},\r\n      reviews:[\r\n        {\r\n          id:1,\r\n        creator: \"jrc\",\r\n        rating: 2,\r\n        title:\"great bottle\",\r\n        comment:\"This is awesome\",\r\n        creationDate: new Date()\r\n        },\r\n        {\r\n          id:2, \r\n        creator: \"tekle\",\r\n        rating: 0,\r\n        creationDate: new Date(),\r\n        comment: \"Ive Seen Better\",\r\n        title:\"fell apart\"\r\n        }\r\n        ]\r\n\r\n    }\r\n\r\n    editReview = () => {}\r\n\r\n    // Add Review for Item\r\n    addReview = () => {\r\n      this.props.history.push(\"/products/\" + this.props.match.params.id + \"/create-review\")\r\n    }\r\n    render () {\r\n\r\n      const {reviews, description, details, rating, currentUser} = this.state\r\n\r\n      return (\r\n        <div>\r\n\r\n          <h2>Product Details & Reviews</h2>\r\n\r\n          {/* Product Picture and Description */}\r\n          <img alt=\"Product\"/>\r\n          <h2>{description || \"Product Description\"}</h2>\r\n          \r\n          {/* Reputation with Button to Add if None */}\r\n          <h2>Reputation: {rating === null \r\n            ? <XButton \r\n                title=\"Rate Product\"\r\n                onClick = {this.addReview}\r\n              />\r\n            : rating}</h2>\r\n\r\n          {/* Product Details */}\r\n          <h2>{\"Product Details\"}</h2>\r\n          {Object.entries(details).map(([key, value]) => <p key={key}>{key}: {value}</p>)}\r\n\r\n          {/* Reviews Section with Button to Add Review*/}\r\n          <h2>Reviews: {rating || \"Be the First to Review\"}  \r\n          <XButton \r\n            title=\"Create Review\"\r\n            onClick = {this.addReview}\r\n          />\r\n          </h2>\r\n\r\n          {/* Show Reviews Table*/}\r\n          {reviews.length\r\n\r\n          ? <table><tbody>\r\n              {reviews.map(review => ([\r\n                \r\n                  // Rating, Creator, Date, Edit Button\r\n                  <tr key ={review.id + \"1\"}> \r\n                    <td>Rating: {review.rating}</td>\r\n                    <td>User: {review.creator}</td>\r\n                    <td>{review.creationDate.toString()}</td>\r\n                    <td>{currentUser === review.creator\r\n                          ? <XButton\r\n                              title=\"Edit Review\"\r\n                              \r\n                            />\r\n                          : \"\"\r\n                        }\r\n                    </td>\r\n                  </tr>,\r\n\r\n                  <tr key ={review.id + \"2\"}>\r\n                    <td  colSpan=\"4\">{review.comment}</td>\r\n                  </tr>\r\n                \r\n              ]))} \r\n            </tbody></table>\r\n          \r\n          : <h2>No Reviews</h2>\r\n\r\n          }\r\n\r\n        </div>\r\n      )\r\n    }\r\n  }\r\n)\r\n\r\n\r\n// Add & Update Products\r\nexport const UpsertProduct = connect (\r\n\r\n  // Map State to Props\r\n  state => ({\r\n    user: state.auth.currentUser.username,\r\n    fields: state.products.setup.upsertProductFields,\r\n    title: state.products.upsertProduct.title,\r\n    description: state.products.upsertProduct.description\r\n  }),\r\n\r\n  // Map Dispatch to Props\r\n  dispatch => ({\r\n    addProduct: (data) => dispatch(),\r\n    updateTextbox: ({target}) => dispatch(productTextboxChangeFx(target.name, target.value)),\r\n    clearTextbox: () => dispatch(productClearTextboxFx())\r\n  })\r\n\r\n)(\r\n\r\n  // UpsertProduct Component\r\n  class extends Component {\r\n\r\n\r\n    componentDidMount () {\r\n\r\n\r\n    }\r\n\r\n    componentDidUpdate() {\r\n\r\n    }\r\n\r\n    // Add / Edit Product\r\n    upsert = (e) => {\r\n\r\n      e.preventDefault()\r\n\r\n      const {title, description, user, fields, clearTextbox} = this.props    \r\n\r\n      // Object to Send\r\n      const data = {\r\n          creator: user,\r\n          creationDate: new Date(),\r\n          description,\r\n          title\r\n      }\r\n\r\n      alert (JSON.stringify(data))\r\n      //request\r\n      // reputation: 0 (update when product review is added)\r\n      // reviews:[] (push review to array. Create field when first review is Added)\r\n      // img: \"picture http path\"\r\n      clearTextbox()\r\n\r\n    }\r\n\r\n    // Cancel Button\r\n    cancel = () => this.props.history.goBack()\r\n\r\n    render () {\r\n      \r\n      // debugger\r\n      const {title, description, updateTextbox} = this.props \r\n\r\n      // Add or Edit Mode\r\n      let edit = this.props.match.params.id\r\n\r\n      return (\r\n\r\n          <div className=\"container\">\r\n          <br/>\r\n\r\n          <h2>{edit ? \"Edit Product\" : \"Add Product\"}</h2>\r\n          \r\n          <form className=\"form-horizontal\" onSubmit={this.upsert}>\r\n\r\n            {/* Title */}\r\n            <FormTextbox\r\n              title=\"Title\"\r\n              name = \"title\"\r\n              value = {title}\r\n              onChange = {updateTextbox}\r\n            />\r\n\r\n            {/* Comment */}\r\n            <FormTextbox\r\n              title = \"Description\" \r\n              name = \"description\"\r\n              textArea = \"true\"\r\n              value = {description}\r\n              onChange = {updateTextbox}\r\n            />\r\n\r\n            <div className=\"form-group\">        \r\n              <div className=\"col-sm-offset-2 col-sm-10\">\r\n                <XButton\r\n                  title = \"Cancel\"\r\n                  className = \"btn btn-secondary\"\r\n                  onClick = {this.cancel}\r\n                />  \r\n\r\n                <XButton\r\n                  title = {edit ? \"Update Product\" : \"Add Product\"}\r\n                  type = \"Submit\"\r\n                /> \r\n\r\n              {/* Delete Button */}\r\n              {edit &&\r\n                <XButton\r\n                  title = \"Delete Product\"\r\n                />\r\n              }\r\n              </div>\r\n            </div>\r\n          </form>\r\n        </div>\r\n\r\n\r\n      )\r\n\r\n    }\r\n\r\n  }\r\n)","C:\\Users\\jerem\\Documents\\MIU\\CS568_WebApplicationDevelopment1\\Final_Project\\Final_Project\\client\\src\\5_SuperUser.js",[],"C:\\Users\\jerem\\Documents\\MIU\\CS568_WebApplicationDevelopment1\\Final_Project\\Final_Project\\client\\src\\1_Router.js",[],"C:\\Users\\jerem\\Documents\\MIU\\CS568_WebApplicationDevelopment1\\Final_Project\\Final_Project\\client\\src\\9.1_Actions.js",[],"C:\\Users\\jerem\\Documents\\MIU\\CS568_WebApplicationDevelopment1\\Final_Project\\Final_Project\\client\\src\\4_Reviews.js",[],"C:\\Users\\jerem\\Documents\\MIU\\CS568_WebApplicationDevelopment1\\Final_Project\\Final_Project\\client\\src\\zComponents.js",[],"C:\\Users\\jerem\\Documents\\MIU\\CS568_WebApplicationDevelopment1\\Final_Project\\Final_Project\\client\\src\\2_Login.js",["66"],"// import './2_Login.css';\r\n\r\nimport {Component} from \"react\"\r\nimport {connect} from \"react-redux\"\r\n\r\nimport {Textbox, XButton} from \"./zComponents\"\r\nimport {textboxChangeFx, loginFx, setUserInfoFx} from \"./9.1_Actions\"\r\n\r\nimport jwt from \"jsonwebtoken\"\r\n\r\nimport {axiosRequest, isMissing} from \"./zFx\"\r\nimport {axios} from \"./index\"\r\n\r\n\r\nexport const Login = connect(\r\n\r\n  // MapStateToProps\r\n  state => ({\r\n    username: state.auth.username, \r\n    password: state.auth.password\r\n  }),\r\n  \r\n  // MapDispatchToProps\r\n  dispatch => ({\r\n    inputChange: ({target : {name, value}}) => dispatch(textboxChangeFx(name, value)),\r\n    login: (fx) => dispatch(fx)\r\n  })\r\n\r\n)(\r\n\r\n  // Login Display Component\r\n  class extends Component {\r\n\r\n\r\n    login = () => {\r\n \r\n      this.getAccount(\"/auth/login\")\r\n    }\r\n\r\n    create = () => {\r\n\r\n      this.getAccount(\"/auth/signup\")\r\n    }\r\n\r\n    // Request Server for Account Data\r\n    getAccount = (path) => {\r\n\r\n      // Required Data\r\n      const required = {email: \"Username\", password: \"Password\"}\r\n      \r\n      // Get User Input\r\n      const {username: email, password} = this.props\r\n      const info = {email, password}\r\n\r\n      // Validate Data\r\n      const missing = isMissing(Object.keys(required), info,required)\r\n      if (missing) return alert(missing[1])\r\n\r\n      this.props.login( \r\n\r\n          dispatch => {\r\n\r\n              axiosRequest(axios.post(path, info), \r\n      \r\n              // Login Callback Function\r\n              data => {\r\n\r\n                // Set Axios Token\r\n                axios.defaults.headers.common['Authorization'] = data.data;\r\n\r\n                // Update User Info State\r\n                dispatch(setUserInfoFx(jwt.decode(data.data)))\r\n\r\n                // Go to Main Page\r\n                this.props.history.replace(\"./\")\r\n\r\n              })\r\n            }\r\n\r\n          )\r\n\r\n    }\r\n\r\n    render () {\r\n\r\n      return (\r\n        \r\n      <div>\r\n\r\n      <div>\r\n          <div className=\"login-main-text\">\r\n              <h2>Product Review Application Login Page</h2>\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"main\">\r\n          <div className=\"col-md-6 col-sm-12\">\r\n              <div className=\"login-form\">\r\n                {/* <form onSubmit={this.getAccount}> */}\r\n            \r\n                    <div className=\"form-group\">\r\n\r\n                        {/* Username */}\r\n                        <Textbox\r\n                          name = \"username\"\r\n                          labelCaption = \"User Name \"\r\n                          value = {this.props.username}\r\n                          onChange = {this.props.inputChange}\r\n                          placeholder=\"Email\"\r\n                          // className=\"form-control\"\r\n                          // required = {true}\r\n                        />\r\n\r\n                    </div>\r\n\r\n                    <div className=\"form-group\">\r\n\r\n                        {/* Password */}\r\n                        <Textbox\r\n                          name = \"password\"\r\n                          labelCaption = \"Password\"\r\n                          value = {this.props.password}\r\n                          onChange = {this.props.inputChange}\r\n                          placeholder=\"Password\"\r\n                          // className=\"form-control\"\r\n                          // required = {true}\r\n                        \r\n                        />\r\n                    \r\n                    </div>\r\n\r\n                    {/* Login */}\r\n                    <XButton\r\n                      title = \"Login\"\r\n                      // type =\"submit\"\r\n                      className=\"btn btn-primary\"\r\n                      onClick = {this.login}\r\n                      // formAction=\"Get\"\r\n                    />  \r\n\r\n                    {/* Create Account */}\r\n                    <XButton\r\n                      title = \"Register\"\r\n                      // type =\"submit\"\r\n                      className=\"btn btn-secondary\"\r\n                      onClick = {this.create}\r\n                      // formMethod=\"POST\"\r\n                    />\r\n\r\n                {/* </form> */}\r\n              </div>\r\n          </div>\r\n        </div>\r\n\r\n      </div>\r\n    \r\n      )\r\n    }\r\n\r\n  }\r\n)","C:\\Users\\jerem\\Documents\\MIU\\CS568_WebApplicationDevelopment1\\Final_Project\\Final_Project\\client\\src\\zFx.js",[],{"ruleId":"67","replacedBy":"68"},{"ruleId":"69","replacedBy":"70"},{"ruleId":"71","severity":1,"message":"72","line":1,"column":8,"nodeType":"73","messageId":"74","endLine":1,"endColumn":12},{"ruleId":"71","severity":1,"message":"75","line":4,"column":9,"nodeType":"73","messageId":"74","endLine":4,"endColumn":17},{"ruleId":"71","severity":1,"message":"76","line":4,"column":19,"nodeType":"73","messageId":"74","endLine":4,"endColumn":33},{"ruleId":"71","severity":1,"message":"77","line":5,"column":9,"nodeType":"73","messageId":"74","endLine":5,"endColumn":21},{"ruleId":"71","severity":1,"message":"78","line":6,"column":9,"nodeType":"73","messageId":"74","endLine":6,"endColumn":21},{"ruleId":"71","severity":1,"message":"79","line":264,"column":40,"nodeType":"73","messageId":"74","endLine":264,"endColumn":46},{"ruleId":"71","severity":1,"message":"80","line":7,"column":26,"nodeType":"73","messageId":"74","endLine":7,"endColumn":33},"no-native-reassign",["81"],"no-negated-in-lhs",["82"],"no-unused-vars","'logo' is defined but never used.","Identifier","unusedVar","'Products' is defined but never used.","'ProductDetails' is defined but never used.","'UpsertReview' is defined but never used.","'UserAccounts' is defined but never used.","'fields' is assigned a value but never used.","'loginFx' is defined but never used.","no-global-assign","no-unsafe-negation"]