{"ast":null,"code":"var _jsxFileName = \"/Users/shiziwizi/Documents/final-project-tekle-chronister/client/src/2_Login.js\";\n// import './2_Login.css';\nimport { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { Textbox, XButton } from \"./zComponents\";\nimport { textboxChangeFx, loginFx, setUserInfoFx } from \"./9.1_Actions\";\nimport jwt from \"jsonwebtoken\";\nimport { axiosRequest, isMissing } from \"./zFx\";\nimport { axios } from \"./index\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const Login = connect( // MapStateToProps\nstate => ({\n  username: state.auth.username,\n  password: state.auth.password\n}), // MapDispatchToProps\ndispatch => ({\n  inputChange: ({\n    target: {\n      name,\n      value\n    }\n  }) => dispatch(textboxChangeFx(name, value)),\n  loginTest: (user, role) => dispatch(loginFx(user, role)),\n  login: fx => dispatch(fx)\n}))( // Login Display Component\nclass extends Component {\n  constructor(...args) {\n    super(...args);\n\n    this.login = () => {\n      this.getAccount(\"login\");\n    };\n\n    this.create = () => {\n      this.getAccount(\"create\");\n    };\n\n    this.getAccount = path => {\n      // Required Data\n      const required = {\n        username: \"Username\",\n        password: \"Password\"\n      }; // Get User Input\n\n      const {\n        username,\n        password\n      } = this.props;\n      const info = {\n        username,\n        password\n      }; // Validate Data\n\n      const missing = isMissing(Object.keys(required), info, required);\n      if (missing) return alert(missing[1]); // Account Setup for Testing ????????????????????\n\n      this.props.loginTest(username, \"SuperUser\");\n      this.props.login(dispatch => {\n        axiosRequest(axios.post(path, info), // Login Callback Function\n        data => {\n          // Set Axios Token\n          axios.defaults.headers.common['Authorization'] = data.data; // Update User Info State\n\n          dispatch(setUserInfoFx(jwt.decode(data.data))); // Go to Main Page\n\n          this.props.history.replace(\"./\");\n        });\n      });\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"login-main-text\",\n          children: /*#__PURE__*/_jsxDEV(\"h2\", {\n            children: \"Product Review Application Login Page\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 96,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"main\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col-md-6 col-sm-12\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"login-form\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"form-group\",\n              children: /*#__PURE__*/_jsxDEV(Textbox, {\n                name: \"username\",\n                labelCaption: \"User Name\",\n                value: this.props.username,\n                onChange: this.props.inputChange,\n                placeholder: \"User Name\" // className=\"form-control\"\n                // required = {true}\n\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 108,\n                columnNumber: 25\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 105,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"form-group\",\n              children: /*#__PURE__*/_jsxDEV(Textbox, {\n                name: \"password\",\n                labelCaption: \"Password\",\n                value: this.props.password,\n                onChange: this.props.inputChange,\n                placeholder: \"Password\" // className=\"form-control\"\n                // required = {true}\n\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 123,\n                columnNumber: 25\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 120,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(XButton, {\n              title: \"Login\" // type =\"submit\"\n              ,\n              className: \"btn btn-primary\",\n              onClick: this.login // formAction=\"Get\"\n\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 137,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(XButton, {\n              title: \"Register\" // type =\"submit\"\n              ,\n              className: \"btn btn-secondary\",\n              onClick: this.create // formMethod=\"POST\"\n\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 146,\n              columnNumber: 21\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 102,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 7\n    }, this);\n  }\n\n});","map":{"version":3,"sources":["/Users/shiziwizi/Documents/final-project-tekle-chronister/client/src/2_Login.js"],"names":["Component","connect","Textbox","XButton","textboxChangeFx","loginFx","setUserInfoFx","jwt","axiosRequest","isMissing","axios","Login","state","username","auth","password","dispatch","inputChange","target","name","value","loginTest","user","role","login","fx","getAccount","create","path","required","props","info","missing","Object","keys","alert","post","data","defaults","headers","common","decode","history","replace","render"],"mappings":"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","sourcesContent":["// import './2_Login.css';\n\nimport {Component} from \"react\"\nimport {connect} from \"react-redux\"\n\nimport {Textbox, XButton} from \"./zComponents\"\nimport {textboxChangeFx, loginFx, setUserInfoFx} from \"./9.1_Actions\"\n\nimport jwt from \"jsonwebtoken\"\n\nimport {axiosRequest, isMissing} from \"./zFx\"\nimport {axios} from \"./index\"\n\n\nexport const Login = connect(\n\n  // MapStateToProps\n  state => ({\n    username: state.auth.username, \n    password: state.auth.password\n  }),\n  \n  // MapDispatchToProps\n  dispatch => ({\n    inputChange: ({target : {name, value}}) => dispatch(textboxChangeFx(name, value)),\n    loginTest: (user, role) => dispatch(loginFx(user, role)),\n    login: (fx) => dispatch(fx)\n  })\n\n)(\n\n  // Login Display Component\n  class extends Component {\n\n\n    login = () => {\n \n      this.getAccount(\"login\")\n    }\n\n    create = () => {\n\n      this.getAccount(\"create\")\n    }\n\n    // Request Server for Account Data\n    getAccount = (path) => {\n\n      // Required Data\n      const required = {username: \"Username\", password: \"Password\"}\n      \n      // Get User Input\n      const {username, password} = this.props\n      const info = {username, password}\n\n      // Validate Data\n      const missing = isMissing(Object.keys(required), info,required)\n      if (missing) return alert(missing[1])\n \n      // Account Setup for Testing ????????????????????\n      this.props.loginTest(username, \"SuperUser\")\n\n      this.props.login( \n\n          dispatch => {\n\n              axiosRequest(axios.post(path, info), \n      \n              // Login Callback Function\n              data => {\n\n                // Set Axios Token\n                axios.defaults.headers.common['Authorization'] = data.data;\n\n                // Update User Info State\n                dispatch(setUserInfoFx(jwt.decode(data.data)))\n\n                // Go to Main Page\n                this.props.history.replace(\"./\")\n\n              })\n            }\n\n          )\n\n    }\n\n    render () {\n\n      return (\n        \n      <div>\n\n      <div>\n          <div className=\"login-main-text\">\n              <h2>Product Review Application Login Page</h2>\n          </div>\n        </div>\n\n        <div className=\"main\">\n          <div className=\"col-md-6 col-sm-12\">\n              <div className=\"login-form\">\n                {/* <form onSubmit={this.getAccount}> */}\n            \n                    <div className=\"form-group\">\n\n                        {/* Username */}\n                        <Textbox\n                          name = \"username\"\n                          labelCaption = \"User Name\"\n                          value = {this.props.username}\n                          onChange = {this.props.inputChange}\n                          placeholder=\"User Name\"\n                          // className=\"form-control\"\n                          // required = {true}\n                        />\n\n                    </div>\n\n                    <div className=\"form-group\">\n\n                        {/* Password */}\n                        <Textbox\n                          name = \"password\"\n                          labelCaption = \"Password\"\n                          value = {this.props.password}\n                          onChange = {this.props.inputChange}\n                          placeholder=\"Password\"\n                          // className=\"form-control\"\n                          // required = {true}\n                        \n                        />\n                    \n                    </div>\n\n                    {/* Login */}\n                    <XButton\n                      title = \"Login\"\n                      // type =\"submit\"\n                      className=\"btn btn-primary\"\n                      onClick = {this.login}\n                      // formAction=\"Get\"\n                    />  \n\n                    {/* Create Account */}\n                    <XButton\n                      title = \"Register\"\n                      // type =\"submit\"\n                      className=\"btn btn-secondary\"\n                      onClick = {this.create}\n                      // formMethod=\"POST\"\n                    />\n\n                {/* </form> */}\n              </div>\n          </div>\n        </div>\n\n      </div>\n    \n      )\n    }\n\n  }\n)"]},"metadata":{},"sourceType":"module"}