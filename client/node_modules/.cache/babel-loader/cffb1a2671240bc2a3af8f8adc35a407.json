{"ast":null,"code":"var _jsxFileName = \"/Users/shiziwizi/Documents/final-project-tekle-chronister/client/src/3_Products.js\";\nimport { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { XButton, FormTextbox } from \"./zComponents\";\nimport { productTextboxChangeFx, productClearTextboxFx } from \"./9.1_Actions\"; // Display Products List Component\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const Products = connect( // MapStateToProps\nstate => ({\n  products: state.products.products,\n  user: state.auth.currentUser.username,\n  fieldList: state.products.setup.productFields\n}), // MapDischargeToProps\nnull)( // Product List Component\nclass extends Component {\n  constructor(...args) {\n    super(...args);\n\n    this.addReview = ({\n      target\n    }) => {\n      this.props.history.push(\"/products/\" + this.getId(target) + \"/create-review\");\n    };\n\n    this.editProduct = ({\n      target\n    }) => {\n      this.props.history.push(\"/products/\" + this.getId(target));\n    };\n  }\n\n  // Returns Product Id Stored in element.data.id or null\n  getId(element) {\n    let el = element;\n\n    while (el && !el.dataset.id) el = el.parentElement;\n\n    return el && el.dataset.id;\n  }\n\n  render() {\n    const header = true; // Show Product Table Header\n\n    const {\n      products,\n      user,\n      fieldList\n    } = this.props; // Product Field List to Show {Field Key: Field Name}\n\n    const fields = Object.keys(fieldList);\n    const creator = \"creator\"; // Product Creator Key\n\n    const id = \"_id\"; // Product Id Key\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Products List\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n        className: \"table table-hover table-sortable\",\n        onClick: e => {\n          if (e.target.dataset.id) // alert(e.target.dataset.id)\n            // debugger\n            // View Product Detail Page\n            this.props.history.push(\"/detail-product/\" + e.target.dataset.id);\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n          children: header && /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [fields.map((n, i) => /*#__PURE__*/_jsxDEV(\"th\", {\n              children: fieldList[n]\n            }, i, false, {\n              fileName: _jsxFileName,\n              lineNumber: 65,\n              columnNumber: 48\n            }, this)), /*#__PURE__*/_jsxDEV(\"td\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 65,\n              columnNumber: 81\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 65,\n              columnNumber: 90\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 22\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: products.map(product => /*#__PURE__*/_jsxDEV(\"tr\", {\n            \"data-id\": product[id],\n            children: [fields.map((n, i) => /*#__PURE__*/_jsxDEV(\"td\", {\n              \"data-id\": product[id],\n              children: product[n]\n            }, product[id] + i, false, {\n              fileName: _jsxFileName,\n              lineNumber: 74,\n              columnNumber: 33\n            }, this)), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: /*#__PURE__*/_jsxDEV(XButton, {\n                title: \"Add Review\",\n                onClick: this.addReview\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 77,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 77,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: user === product[creator] && /*#__PURE__*/_jsxDEV(XButton, {\n                title: \"Edit Product\",\n                className: \"btn btn-secondary\",\n                onClick: this.editProduct\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 86,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 84,\n              columnNumber: 13\n            }, this)]\n          }, product[id], true, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 11\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 9\n    }, this);\n  }\n\n}); // Display Product Details with Reviews\n\nexport const ProductDetails = connect( // MapStateToProps\nstate => ({\n  user: state.auth.currentUser.username\n}), // MapDispatchToProps\nnull)( // Product Details Component\nclass ProductDetails extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      rating: null,\n      description: \"A Outdoor Wonder Water Bottle\",\n      details: {\n        size: \"1 Liter\",\n        width: \"3 inches\",\n        height: \"12 inches\"\n      },\n      reviews: [{\n        id: 1,\n        creator: \"jrc\",\n        rating: 2,\n        title: \"great bottle\",\n        comment: \"This is awesome\",\n        creationDate: new Date()\n      }, {\n        id: 2,\n        creator: \"tekle\",\n        rating: 0,\n        creationDate: new Date(),\n        comment: \"Ive Seen Better\",\n        title: \"fell apart\"\n      }]\n    };\n\n    this.editReview = () => {};\n\n    this.addReview = () => {\n      this.props.history.push(\"/products/\" + this.props.match.params.id + \"/create-review\");\n    };\n  }\n\n  render() {\n    const {\n      reviews,\n      description,\n      details,\n      rating,\n      currentUser\n    } = this.state;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Product Details & Reviews\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 161,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n        alt: \"Product\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 164,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: description || \"Product Description\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 165,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: [\"Reputation: \", rating === null ? /*#__PURE__*/_jsxDEV(XButton, {\n          title: \"Rate Product\",\n          onClick: this.addReview\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 169,\n          columnNumber: 15\n        }, this) : rating]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 168,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Product Details\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 176,\n        columnNumber: 11\n      }, this), Object.entries(details).map(([key, value]) => /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [key, \": \", value]\n      }, key, true, {\n        fileName: _jsxFileName,\n        lineNumber: 177,\n        columnNumber: 58\n      }, this)), /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: [\"Reviews: \", rating || \"Be the First to Review\", /*#__PURE__*/_jsxDEV(XButton, {\n          title: \"Create Review\",\n          onClick: this.addReview\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 181,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 180,\n        columnNumber: 11\n      }, this), reviews.length ? /*#__PURE__*/_jsxDEV(\"table\", {\n        children: /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: reviews.map(review => [\n          /*#__PURE__*/\n          // Rating, Creator, Date, Edit Button\n          _jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n              children: [\"Rating: \", review.rating]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 195,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: [\"User: \", review.creator]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 196,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: review.creationDate.toString()\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 197,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: currentUser === review.creator ? /*#__PURE__*/_jsxDEV(XButton, {\n                title: \"Edit Review\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 199,\n                columnNumber: 29\n              }, this) : \"\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 198,\n              columnNumber: 21\n            }, this)]\n          }, review.id + \"1\", true, {\n            fileName: _jsxFileName,\n            lineNumber: 194,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: /*#__PURE__*/_jsxDEV(\"td\", {\n              colSpan: \"4\",\n              children: review.comment\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 209,\n              columnNumber: 21\n            }, this)\n          }, review.id + \"2\", false, {\n            fileName: _jsxFileName,\n            lineNumber: 208,\n            columnNumber: 19\n          }, this)])\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 190,\n          columnNumber: 20\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 190,\n        columnNumber: 13\n      }, this) : /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"No Reviews\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 215,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 159,\n      columnNumber: 9\n    }, this);\n  }\n\n}); // Add & Update Products\n\nexport const UpsertProduct = connect( // Map State to Props\nstate => ({\n  user: state.auth.currentUser.username,\n  fields: state.products.setup.upsertProductFields,\n  title: state.products.upsertProduct.title,\n  description: state.products.upsertProduct.description\n}), // Map Dispatch to Props\ndispatch => ({\n  addProduct: data => dispatch(),\n  updateTextbox: ({\n    target\n  }) => dispatch(productTextboxChangeFx(target.name, target.value)),\n  clearTextbox: () => dispatch(productClearTextboxFx())\n}))( // UpsertProduct Component\nclass extends Component {\n  constructor(...args) {\n    super(...args);\n\n    this.upsert = e => {\n      e.preventDefault();\n      const {\n        title,\n        description,\n        user,\n        fields,\n        clearTextbox\n      } = this.props; // Object to Send\n\n      const data = {\n        creator: user,\n        creationDate: new Date(),\n        description,\n        title\n      };\n      alert(JSON.stringify(data)); //request\n      // reputation: 0 (update when product review is added)\n      // reviews:[] (push review to array. Create field when first review is Added)\n      // img: \"picture http path\"\n\n      clearTextbox();\n    };\n\n    this.cancel = () => this.props.history.goBack();\n  }\n\n  componentDidMount() {}\n\n  componentDidUpdate() {} // Add / Edit Product\n\n\n  render() {\n    // debugger\n    const {\n      title,\n      description,\n      updateTextbox\n    } = this.props; // Add or Edit Mode\n\n    let edit = this.props.match.params.id;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: [/*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 297,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: edit ? \"Edit Product\" : \"Add Product\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 299,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        className: \"form-horizontal\",\n        onSubmit: this.upsert,\n        children: [/*#__PURE__*/_jsxDEV(FormTextbox, {\n          title: \"Title\",\n          name: \"title\",\n          value: title,\n          onChange: updateTextbox\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 304,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(FormTextbox, {\n          title: \"Description\",\n          name: \"description\",\n          textArea: \"true\",\n          value: description,\n          onChange: updateTextbox\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 312,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"col-sm-offset-2 col-sm-10\",\n            children: [/*#__PURE__*/_jsxDEV(XButton, {\n              title: \"Cancel\",\n              className: \"btn btn-secondary\",\n              onClick: this.cancel\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 322,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(XButton, {\n              title: edit ? \"Update Product\" : \"Add Product\",\n              type: \"Submit\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 328,\n              columnNumber: 17\n            }, this), edit && /*#__PURE__*/_jsxDEV(XButton, {\n              title: \"Delete Product\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 335,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 321,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 320,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 301,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 296,\n      columnNumber: 11\n    }, this);\n  }\n\n});","map":{"version":3,"sources":["/Users/shiziwizi/Documents/final-project-tekle-chronister/client/src/3_Products.js"],"names":["Component","connect","XButton","FormTextbox","productTextboxChangeFx","productClearTextboxFx","Products","state","products","user","auth","currentUser","username","fieldList","setup","productFields","addReview","target","props","history","push","getId","editProduct","element","el","dataset","id","parentElement","render","header","fields","Object","keys","creator","e","map","n","i","product","ProductDetails","rating","description","details","size","width","height","reviews","title","comment","creationDate","Date","editReview","match","params","entries","key","value","length","review","toString","UpsertProduct","upsertProductFields","upsertProduct","dispatch","addProduct","data","updateTextbox","name","clearTextbox","upsert","preventDefault","alert","JSON","stringify","cancel","goBack","componentDidMount","componentDidUpdate","edit"],"mappings":"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","sourcesContent":["import {Component} from \"react\"\nimport {connect} from \"react-redux\"\nimport {XButton, FormTextbox} from \"./zComponents\"\n\nimport {productTextboxChangeFx, productClearTextboxFx} from \"./9.1_Actions\"\n\n// Display Products List Component\nexport const Products = connect (\n\n  // MapStateToProps\n  state => ({\n    products: state.products.products,\n    user: state.auth.currentUser.username,\n    fieldList: state.products.setup.productFields\n  }),\n\n  // MapDischargeToProps\n  null\n\n)(\n\n  // Product List Component\n  class extends Component { \n\n    // Add Review Button\n    addReview = ({target}) => {\n      this.props.history.push(\"/products/\" + this.getId(target) + \"/create-review\")\n    }\n\n    // Edit Product Button\n    editProduct = ({target}) => {\n      this.props.history.push(\"/products/\" + this.getId(target))\n    }\n\n    // Returns Product Id Stored in element.data.id or null\n    getId (element) {\n      let el = element\n      while (el && !el.dataset.id) el = el.parentElement\n      return el && el.dataset.id\n    }\n\n    render () {\n\n      const header = true // Show Product Table Header\n      const {products, user, fieldList} = this.props // Product Field List to Show {Field Key: Field Name}\n      const fields = Object.keys(fieldList)\n      const creator = \"creator\" // Product Creator Key\n      const id = \"_id\" // Product Id Key\n\n      return (\n\n        <div>\n        <h2>Products List</h2>\n\n        <table className=\"table table-hover table-sortable\" onClick={(e)=>{\n          if (e.target.dataset.id)\n          // alert(e.target.dataset.id)\n          // debugger\n          // View Product Detail Page\n            this.props.history.push(\"/detail-product/\" + e.target.dataset.id)\n          }}>\n\n          {/* Add Header */}\n          <thead>\n          {header && <tr>{fields.map((n, i) => <th key={i}>{fieldList[n]}</th>)}<td></td><td></td></tr>}\n          </thead>\n\n          {/* Add Rows */}\n          <tbody>\n          {products.map(product => (\n          <tr key={product[id]} data-id={product[id]}>\n\n            {/* Add Columns/Cells */}\n            {fields.map((n, i)=><td key={product[id] + i} data-id={product[id]}>{product[n]}</td>)}\n\n            {/* Add Review Button */}\n            <td><XButton\n              title =\"Add Review\"\n              onClick = {this.addReview}\n              />\n            </td>\n\n            {/* Add Edit Button if User Created*/}\n            <td>\n              {user === product[creator] && \n                <XButton\n                  title =\"Edit Product\"\n                  className = \"btn btn-secondary\"\n                  onClick = {this.editProduct}\n                />\n              }\n            </td>           \n            \n          </tr>\n        ))}\n\n        </tbody></table>\n        </div>\n      )\n    }\n\n  }\n)\n\n\n\n// Display Product Details with Reviews\nexport const ProductDetails = connect(\n\n  // MapStateToProps\n  state => ({\n    user: state.auth.currentUser.username,\n  }), \n\n  // MapDispatchToProps\n  null\n\n)(\n\n  // Product Details Component\n  class ProductDetails extends Component{\n\n    state = {\n      rating:null ,\n      description:\"A Outdoor Wonder Water Bottle\",\n      details: {size:\"1 Liter\", width: \"3 inches\", height: \"12 inches\"},\n      reviews:[\n        {\n          id:1,\n        creator: \"jrc\",\n        rating: 2,\n        title:\"great bottle\",\n        comment:\"This is awesome\",\n        creationDate: new Date()\n        },\n        {\n          id:2, \n        creator: \"tekle\",\n        rating: 0,\n        creationDate: new Date(),\n        comment: \"Ive Seen Better\",\n        title:\"fell apart\"\n        }\n        ]\n\n    }\n\n    editReview = () => {}\n\n    // Add Review for Item\n    addReview = () => {\n      this.props.history.push(\"/products/\" + this.props.match.params.id + \"/create-review\")\n    }\n    render () {\n\n      const {reviews, description, details, rating, currentUser} = this.state\n\n      return (\n        <div>\n\n          <h2>Product Details & Reviews</h2>\n\n          {/* Product Picture and Description */}\n          <img alt=\"Product\"/>\n          <h2>{description || \"Product Description\"}</h2>\n          \n          {/* Reputation with Button to Add if None */}\n          <h2>Reputation: {rating === null \n            ? <XButton \n                title=\"Rate Product\"\n                onClick = {this.addReview}\n              />\n            : rating}</h2>\n\n          {/* Product Details */}\n          <h2>{\"Product Details\"}</h2>\n          {Object.entries(details).map(([key, value]) => <p key={key}>{key}: {value}</p>)}\n\n          {/* Reviews Section with Button to Add Review*/}\n          <h2>Reviews: {rating || \"Be the First to Review\"}  \n          <XButton \n            title=\"Create Review\"\n            onClick = {this.addReview}\n          />\n          </h2>\n\n          {/* Show Reviews Table*/}\n          {reviews.length\n\n          ? <table><tbody>\n              {reviews.map(review => ([\n                \n                  // Rating, Creator, Date, Edit Button\n                  <tr key ={review.id + \"1\"}> \n                    <td>Rating: {review.rating}</td>\n                    <td>User: {review.creator}</td>\n                    <td>{review.creationDate.toString()}</td>\n                    <td>{currentUser === review.creator\n                          ? <XButton\n                              title=\"Edit Review\"\n                              \n                            />\n                          : \"\"\n                        }\n                    </td>\n                  </tr>,\n\n                  <tr key ={review.id + \"2\"}>\n                    <td  colSpan=\"4\">{review.comment}</td>\n                  </tr>\n                \n              ]))} \n            </tbody></table>\n          \n          : <h2>No Reviews</h2>\n\n          }\n\n        </div>\n      )\n    }\n  }\n)\n\n\n// Add & Update Products\nexport const UpsertProduct = connect (\n\n  // Map State to Props\n  state => ({\n    user: state.auth.currentUser.username,\n    fields: state.products.setup.upsertProductFields,\n    title: state.products.upsertProduct.title,\n    description: state.products.upsertProduct.description\n  }),\n\n  // Map Dispatch to Props\n  dispatch => ({\n    addProduct: (data) => dispatch(),\n    updateTextbox: ({target}) => dispatch(productTextboxChangeFx(target.name, target.value)),\n    clearTextbox: () => dispatch(productClearTextboxFx())\n  })\n\n)(\n\n  // UpsertProduct Component\n  class extends Component {\n\n\n    componentDidMount () {\n\n\n    }\n\n    componentDidUpdate() {\n\n    }\n\n    // Add / Edit Product\n    upsert = (e) => {\n\n      e.preventDefault()\n\n      const {title, description, user, fields, clearTextbox} = this.props    \n\n      // Object to Send\n      const data = {\n          creator: user,\n          creationDate: new Date(),\n          description,\n          title\n      }\n\n      alert (JSON.stringify(data))\n      //request\n      // reputation: 0 (update when product review is added)\n      // reviews:[] (push review to array. Create field when first review is Added)\n      // img: \"picture http path\"\n      clearTextbox()\n\n    }\n\n    // Cancel Button\n    cancel = () => this.props.history.goBack()\n\n    render () {\n      \n      // debugger\n      const {title, description, updateTextbox} = this.props \n\n      // Add or Edit Mode\n      let edit = this.props.match.params.id\n\n      return (\n\n          <div className=\"container\">\n          <br/>\n\n          <h2>{edit ? \"Edit Product\" : \"Add Product\"}</h2>\n          \n          <form className=\"form-horizontal\" onSubmit={this.upsert}>\n\n            {/* Title */}\n            <FormTextbox\n              title=\"Title\"\n              name = \"title\"\n              value = {title}\n              onChange = {updateTextbox}\n            />\n\n            {/* Comment */}\n            <FormTextbox\n              title = \"Description\" \n              name = \"description\"\n              textArea = \"true\"\n              value = {description}\n              onChange = {updateTextbox}\n            />\n\n            <div className=\"form-group\">        \n              <div className=\"col-sm-offset-2 col-sm-10\">\n                <XButton\n                  title = \"Cancel\"\n                  className = \"btn btn-secondary\"\n                  onClick = {this.cancel}\n                />  \n\n                <XButton\n                  title = {edit ? \"Update Product\" : \"Add Product\"}\n                  type = \"Submit\"\n                /> \n\n              {/* Delete Button */}\n              {edit &&\n                <XButton\n                  title = \"Delete Product\"\n                />\n              }\n              </div>\n            </div>\n          </form>\n        </div>\n\n\n      )\n\n    }\n\n  }\n)"]},"metadata":{},"sourceType":"module"}